apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  serviceName: {{ include "fullname" . }}
  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: mariadb-root-password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: mariadb-password
            - name: MYSQL_DATABASE
              value: {{ default "" .Values.db.database | quote }}
            - name: MYSQL_USER
              value: {{ default "" .Values.db.user | quote }}
            - name: PUID
              value: "0"
            - name: PGID
              value: "0"
          volumeMounts:
          - name: data
            mountPath: /config
            subPath: databases
          - name: config
            mountPath: /config/custom/custom.cnf
            subPath: custom.cnf
          ports:
          - name: mysql
            containerPort: 3306
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
            initialDelaySeconds: {{ default 30 .Values.livenessProbeDelay }}
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - mysqladmin
              - ping
            initialDelaySeconds: {{ default 5 .Values.readinessProbeDelay }}
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
          items:
          - key: config
            path: custom.cnf
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "name" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
      {{- if .Values.persistence.storageClass }}
        volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
